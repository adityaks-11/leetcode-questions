/*Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,1]
Output: 1
Example 2:

Input: nums = [4,1,2,1,2]
Output: 4
Example 3:

Input: nums = [1]
Output: 1  */




//WTF kya solution nikala mai socho bhai socho crying..
class Solution {
public:
    int singleNumber(vector<int>& nums) {


        vector<int> acha(nums);
        int abc=0;
        sort(acha.begin(),acha.end());
        for(int i:acha){
            cout<<i<<" ";
        }
        int n=acha.size(),k;
        for(int i=0;i<n-1;i++){
            if(acha[i]==acha[i+1]){
                i++;
            }
            else{
                k=acha[i];
                abc++;
                break;
            }
        }
        if(abc==0){
            k=acha[n-1];
        }
        return(k);
        
    }
};

//runtime 95ms
