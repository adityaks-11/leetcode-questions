/*You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.

Merge nums1 and nums2 into a single array sorted in non-decreasing order.

The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.

 

Example 1:

Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
Explanation: The arrays we are merging are [1,2,3] and [2,5,6].
The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.*/













class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i,j,f=1;
        vector<int>demo;
        for(i=0;i<m;i++){
            demo.push_back(nums1.at(i));
        }
        for(j=0;j<n;j++){
            demo.push_back(nums2.at(j));
        }
        sort(demo.begin(),demo.end());
        int k=nums1.size();
        if(k>m){
            for(i=0;i<k;i++){
                nums1.at(i)=demo.at(i);
                f++;
            }
            if(f<m+n){
                for(i=f;i<m+n;i++){
                nums1.push_back(demo.at(i));
            }}}
        else{
            for(i=0;i<k;i++){
                nums1.at(i)=demo.at(i);
                f++;
            }
            for(i=f;i<m+n;i++){
                nums1.push_back(demo.at(i));
            }
        }
    
    
    }
};

//runtime 5ms





//another solution not by me


class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i=m-1 , j=n-1 ;
        while(i>=0 && j>=0 ){
            if(nums1[i]>=nums2[j]){
                nums1[i+j+1]=nums1[i] ;
                i-- ;
                }else{
                    nums1[i+j+1]=nums2[j];
                    j-- ;
                }
        }
        while(j>=0){
                    nums1[j]=nums2[j];
                    j-- ;
                }
    }
}
